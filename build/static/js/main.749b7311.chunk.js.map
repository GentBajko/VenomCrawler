{"version":3,"sources":["components/CrossIcon.svg","components/CrossIconHover.svg","logo.svg","components/SpiderIcon.js","components/PlusIcon.js","components/ElementBadge.js","components/ElementsField.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SpiderIcon","props","useState","width","height","color","version","xmlns","viewBox","preserveAspectRatio","transform","fill","stroke","d","PlusIcon","ElementBadge","crossIcon","cross","setCross","Badge","pill","variant","style","margin","marginRight","item","data-key","index","onClick","event","rmElement","target","dataset","key","src","onMouseEnter","crossIconHover","onMouseLeave","ElementsField","padding","background","elementArray","map","Form","xpath","setXpath","cssSelector","setCssSelector","fieldNames","setFieldNames","startingUrl","setStartingUrl","selectedFile","setSelectedFile","xpathArray","setXpathArray","cssArray","setCssArray","fieldNamesArray","setFieldNamesArray","urlArray","setUrlArray","handleXpathAdd","handleCssAdd","handleFieldNamesAdd","handleUrlAdd","Container","fluid","className","Navbar","opacity","Brand","Row","Col","xs","lg","InputGroup","size","onChange","value","Prepend","Text","id","backgroundColor","FormControl","onKeyPress","aria-label","aria-describedby","Append","Button","borderColor","borderLeft","length","array","Object","assign","splice","class","type","name","display","files","console","log","for","fontSize","fontWeight","letterSpacing","as","file","FormData","append","body","fetch","method","JSON","stringify","mode","then","response","json","catch","err","message","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,4ECA3CD,EAAOC,QAAU,IAA0B,kC,yMCwM5BC,EArMI,SAACC,GAAS,IAAD,EAEDC,mBAAS,MAFR,mBAEnBC,EAFmB,aAGCD,mBAAS,OAHV,mBAGnBE,EAHmB,aAIAF,mBAAS,UAJT,mBAInBG,EAJmB,UAsB5B,OAEE,yBAAKC,QAAQ,MAAMC,MAAM,6BAC3BJ,MAAOA,EAAOC,OAAQA,EAAQI,QAAQ,6BAEtCC,oBAAoB,iBACpB,uBAAGC,UAAa,2DAChBC,KAAQN,EAAOO,OAAQ,QACvB,0BAAMC,EAAE,mzXC0BOC,EAxDE,SAACb,GAAS,IAAD,EAECC,mBAAS,MAFV,mBAEjBC,EAFiB,aAGGD,mBAAS,OAHZ,mBAGjBE,EAHiB,aAIEF,mBAAS,UAJX,6BAsB1B,OACE,yBAAKI,QAAQ,MAAMC,MAAM,6BACxBJ,MAAOA,EAAOC,OAAQA,EAAQI,QAAQ,8BACtCC,oBAAoB,iBAErB,uBAAGC,UAAU,4DACbC,KAAK,UAAUC,OAAO,QACtB,0BAAMC,EAAE,uzBAYR,0BAAMA,EAAE,2nB,0CCEKE,EAvCM,SAACd,GAAS,IAAD,EAEHC,mBAASc,KAFN,mBAErBC,EAFqB,KAEfC,EAFe,KAI5B,OAEE,kBAACC,EAAA,EAAD,CAAOC,MAAI,EACVC,QAAU,QACVC,MAAS,CACPC,OAAS,IAKR,0BAAMD,MAAS,CACbE,YAAc,IAEbvB,EAAMwB,MAET,0BACAC,WAAYzB,EAAM0B,MAClBC,QAAW,SAACC,GAAS5B,EAAM6B,UAAUD,EAAME,OAAOC,QAAQC,OAGxD,yBACEC,IAAOjB,EACPS,WAAYzB,EAAM0B,MAClBL,MAAS,CAACX,KAAO,OACjBwB,aAAgB,WAAKjB,EAASkB,MAC9BC,aAAgB,WAAKnB,EAASF,WCD3BsB,EA7BO,SAACrC,GAAS,IAAD,EAM7B,OACE,yBACAqB,OAAK,GAAKiB,QAAU,GACVC,WAAa,uBADlB,2BAEiB,yBAFjB,6BAGoB,IAHpB,6BAImB,GAJnB,IAQFvC,EAAMwC,aAAaC,KAdD,SAACjB,EAAKE,GAC3B,OAAO,kBAAC,EAAD,CAAcF,KAAQA,EAAME,MAASA,EAAOG,UAAa7B,EAAM6B,iBC2R3Da,EArRF,WAAK,IAAD,IAGUzC,mBAAS,MAHnB,mBAGR0C,EAHQ,KAGFC,EAHE,OAIsB3C,mBAAS,MAJ/B,mBAIR4C,EAJQ,KAIIC,EAJJ,OAKqB7C,mBAAS,MAL9B,mBAKR8C,EALQ,KAKIC,EALJ,OAMsB/C,mBAAS,MAN/B,mBAMRgD,EANQ,KAMIC,EANJ,OAOwBjD,mBAAS,MAPjC,mBAORkD,EAPQ,KAOKC,EAPL,OAUoBnD,mBAAS,IAV7B,mBAURoD,EAVQ,KAUGC,EAVH,OAWgBrD,mBAAS,IAXzB,mBAWRsD,EAXQ,KAWCC,EAXD,OAY8BvD,mBAAS,IAZvC,mBAYRwD,EAZQ,KAYQC,EAZR,OAagBzD,mBAAS,IAbzB,mBAaR0D,EAbQ,KAaCC,EAbD,KAiBTC,EAAiB,WACrBP,EAAc,GAAD,mBAAKD,GAAL,CAAgBV,KAC7BC,EAAS,KAaLkB,EAAe,WACnBN,EAAY,GAAD,mBAAKD,GAAL,CAAcV,KACzBC,EAAe,KAaXiB,GAAsB,WAC1BL,EAAmB,GAAD,mBAAKD,GAAL,CAAqBV,KACvCC,EAAc,KAwBVgB,GAAe,WACnBJ,EAAY,GAAD,mBAAKD,GAAL,CAAcV,KACzBC,EAAe,KAwFjB,OACE,kBAACe,EAAA,EAAD,CAAWC,OAAK,EACdC,UAAa,QACb9C,OAAK,GACLkB,WAAa,iBADR,2BAEQ,6FAFR,0BAGO,KAHP,IAMP,kBAAC6B,EAAA,EAAD,CAAQD,UAAa,YAAa9C,MAAS,CAACgD,QAAU,KAClD,kBAACD,EAAA,EAAOE,MAAR,CAAcjD,MAAS,CAAEjB,MAAQ,UAEjC,kBAAC,EAAD,MAFA,kBAMF,kBAACmE,EAAA,EAAD,CAAKJ,UAAU,mCACb,kBAACK,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,KACT,yBAAKrD,MAAS,CAACiB,QAAU,KAGzB,kBAACqC,EAAA,EAAD,CAAYC,KAAK,KAAKT,UAAU,OAAOU,SAxG1B,SAACjD,GACpBgB,EAAShB,EAAME,OAAOgD,SAwGd,kBAACH,EAAA,EAAWI,QAAZ,KACE,kBAACJ,EAAA,EAAWK,KAAZ,CAAkBC,GAAG,uBAAuB5D,MAAS,CAAC6D,gBAAkB,QAAQ9E,MAAQ,YAAxF,WAIF,kBAAC+E,EAAA,EAAD,CAAaC,WAxFG,SAACxD,GACT,SAAbA,EAAMI,KACP6B,KAsFoDiB,MAASnC,EAAO0C,aAAW,QAAQC,mBAAiB,uBAAuBjE,MAAS,CAAC6D,gBAAkB,UAAUb,QAAU,GAAIjE,MAAQ,WACrL,kBAACuE,EAAA,EAAWY,OAAZ,KACE,kBAACC,EAAA,EAAD,CACE7D,QAAWkC,EACXxC,MAAS,CAACiB,QAAU,EAAE4C,gBAAkB,UAAWO,YAAc,UAAWC,WAAa,OAAOrB,QAAU,KAAO,kBAAC,EAAD,SAGrHhB,EAAWsC,OAAS,EAAI,kBAAC,EAAD,CAAenD,aAAgBa,EAAYxB,UA/KnD,SAACH,GACzB,GAAGA,GAAS,EAAE,CACV,IAAIkE,EAAQC,OAAOC,OAAO,GAAGzC,GAC7BuC,EAAMG,OAAOrE,EAAM,GACnB4B,EAAcsC,OA2K6F,KAIzG,kBAACjB,EAAA,EAAD,CAAYC,KAAK,KAAKT,UAAU,OAAOU,SArHvB,SAACjD,GACvBkB,EAAelB,EAAME,OAAOgD,SAqHpB,kBAACH,EAAA,EAAWI,QAAZ,KACgB,kBAACJ,EAAA,EAAWK,KAAZ,CAAkBC,GAAG,uBAAuB5D,MAAS,CAAC6D,gBAAkB,QAAQ9E,MAAQ,YAAxF,mBAIZ,kBAAC+E,EAAA,EAAD,CAAaC,WAlGE,SAACxD,GACZ,SAAbA,EAAMI,KACP8B,KAgG2DgB,MAASjC,EAAawC,aAAW,QAAQC,mBAAiB,uBAAuBjE,MAAS,CAAC6D,gBAAkB,UAAUb,QAAU,GAAIjE,MAAQ,WAC9L,kBAACuE,EAAA,EAAWY,OAAZ,KACE,kBAACC,EAAA,EAAD,CACC7D,QAAWmC,EACXzC,MAAS,CAACiB,QAAU,EAAE4C,gBAAkB,UAAWO,YAAc,UAAWC,WAAa,OAAOrB,QAAU,KAAO,kBAAC,EAAD,SAI1Hd,EAASoC,OAAS,EAAI,kBAAC,EAAD,CAAenD,aAAgBe,EAAU1B,UAlL/C,SAACH,GACvB,GAAGA,GAAS,EAAE,CACV,IAAIkE,EAAQC,OAAOC,OAAO,GAAGvC,GAC7BqC,EAAMG,OAAOrE,EAAM,GACnB8B,EAAYoC,OA8KuF,KAGjG,kBAACjB,EAAA,EAAD,CAAYC,KAAK,KAAKT,UAAU,OAAOU,SAlItB,SAACjD,GACxBoB,EAAcpB,EAAME,OAAOgD,SAkInB,kBAACH,EAAA,EAAWI,QAAZ,KACI,kBAACJ,EAAA,EAAWK,KAAZ,CAAkBC,GAAG,uBAAuB5D,MAAS,CAAC6D,gBAAkB,QAAQ9E,MAAQ,YAAxF,mBAIJ,kBAAC+E,EAAA,EAAD,CAAaC,WA7GS,SAACxD,GACf,SAAbA,EAAMI,KACP+B,MA2G0De,MAAS/B,EAAYsC,aAAW,QAAQC,mBAAiB,uBAAuBjE,MAAS,CAAC6D,gBAAkB,UAAUb,QAAU,GAAIjE,MAAQ,WAChM,kBAACuE,EAAA,EAAWY,OAAZ,KACE,kBAACC,EAAA,EAAD,CACE7D,QAAWoC,GACX1C,MAAS,CAACiB,QAAU,EAAE4C,gBAAkB,UAAWO,YAAc,UAAWC,WAAa,OAAOrB,QAAU,KAAO,kBAAC,EAAD,SAIrHZ,EAAgBkC,OAAS,EAAI,kBAAC,EAAD,CAAenD,aAAgBiB,EAAiB5B,UApLxD,SAACH,GAC9B,GAAGA,GAAS,EAAE,CACV,IAAIkE,EAAQC,OAAOC,OAAO,GAAGrC,GAC7BmC,EAAMG,OAAOrE,EAAM,GACnBgC,EAAmBkC,OAgLuG,KAGxH,kBAACjB,EAAA,EAAD,CAAYC,KAAK,KAAKT,UAAU,OAAOU,SA/IrB,SAACjD,GACzBsB,EAAetB,EAAME,OAAOgD,SA+IpB,kBAACH,EAAA,EAAWI,QAAZ,KACG,kBAACJ,EAAA,EAAWK,KAAZ,CAAkBC,GAAG,uBAAuB5D,MAAS,CAAC6D,gBAAkB,QAAQ9E,MAAQ,YAAxF,iBAIH,kBAAC+E,EAAA,EAAD,CAAaC,WAxHQ,SAACxD,GACd,SAAbA,EAAMI,KACPgC,MAsH0Dc,MAAS7B,EAAaoC,aAAW,QAAQC,mBAAiB,uBAAuBjE,MAAS,CAAC6D,gBAAkB,UAAUb,QAAU,GAAIjE,MAAQ,WACjM,kBAACuE,EAAA,EAAWY,OAAZ,KACE,kBAACC,EAAA,EAAD,CACE7D,QAAWqC,GACX3C,MAAS,CAACiB,QAAU,EAAE4C,gBAAkB,UAAWO,YAAc,UAAWC,WAAa,OAAOrB,QAAU,KAAO,kBAAC,EAAD,SAGrHV,EAASgC,OAAS,EAAI,kBAAC,EAAD,CAAenD,aAAgBmB,EAAU9B,UA1LjD,SAACH,GACvB,GAAGA,GAAS,EAAE,CACV,IAAIkE,EAAQC,OAAOC,OAAO,GAAGnC,GAC7BiC,EAAMG,OAAOrE,EAAM,GACnBkC,EAAYgC,OAsLyF,KACnG,kBAACrB,EAAA,EAAD,CAAKJ,UAAa,eAClB,yBAAK6B,MAAM,eACP,2BAAQC,KAAQ,OAAQC,KAAQ,cAAejB,GAAK,cAAe5D,MAAS,CAAC8E,QAAU,QAAStB,SA3JzF,SAACjD,GAClBwB,EAAgBxB,EAAME,OAAOsE,MAAM,IACnCC,QAAQC,IAAI1E,EAAME,OAAOsE,MAAM,OA0JrB,2BAAOG,IAAO,cAAepC,UAAa,gCAA1C,cAGChB,EAAe,uBAAG9B,MAAS,CAACjB,MAAQ,UACToG,SAAW,GACXC,WAAa,IACbC,cAAgB,IACdvD,EAAa+C,MAAY,MAG3D,yBAAK/B,UAAW,OACZ,kBAACqB,EAAA,EAAD,CAAQmB,GAAG,QAAQvF,QAAQ,gBAAgB6E,KAAK,SAASnB,MAAM,SAASF,KAAO,KAAKjD,QAtI3E,WACnB,IAAMiF,EAAO,IAAIC,SACjBD,EAAKE,OAAO,QAASnE,GACrBiE,EAAKE,OAAO,cAAcjE,GAC1B+D,EAAKE,OAAO,SAAS3D,GAErB,IAAM4D,EAAO,CACX,aAAiBpD,EACjB,OAAWN,EACX,aAAiBI,EACjB,aAAgBF,GAIlByD,MADiB,+BACF,CACbC,OAAQ,OACRF,KAAOG,KAAKC,UAAUJ,GACtBK,KAAO,SAENC,MAAK,SAACC,GAEL,OAAOA,EAASC,UAIjBC,OAAM,SAACC,GACHA,GACHpB,QAAQC,IAAImB,EAAIC,sBChKTC,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnB,MAAK,SAAAoB,GACJA,EAAaC,gBAEdlB,OAAM,SAAAmB,GACLtC,QAAQsC,MAAMA,EAAMjB,c","file":"static/js/main.749b7311.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CrossIcon.cd971c7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/CrossIconHover.7a969f28.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{useState} from 'react';\n\n\nconst SpiderIcon = (props)=>{\n\n  const [width,setWidth] = useState('40');\n  const [height,setHeight] = useState('40');\n  const [color, setColor] = useState('white');\n\n  const getProps = ()=>{\n\n    if(props.width){\n      setWidth(props.width);\n    }\n    if(props.height){\n      setHeight(props.height);\n    }\n\n    if(props.color){\n      setColor(props.color);\n    }\n\n  }\n\n\nreturn(\n\n  <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\nwidth={width} height={height} viewBox=\"0 0 1280.000000 953.000000\"\n\npreserveAspectRatio=\"xMidYMid meet\">\n<g transform = {\"translate(0.000000,953.000000) scale(0.100000,-0.100000)\"}\nfill = {color} stroke={\"none\"}>\n<path d=\"M5569 9514 c-10 -13 -24 -15 -61 -11 -61 8 -73 3 -99 -39 -19 -31\n-20 -43 -14 -132 7 -94 6 -99 -17 -127 -35 -43 -88 -162 -88 -199 0 -37 -28\n-148 -69 -271 -16 -49 -43 -133 -60 -185 -64 -204 -119 -353 -138 -371 -22\n-22 -183 -74 -283 -91 -73 -12 -314 -76 -435 -115 -191 -62 -372 -156 -534\n-278 -225 -170 -502 -505 -612 -739 -63 -134 -82 -253 -83 -501 -1 -292 23\n-439 110 -672 95 -255 211 -449 364 -607 162 -168 301 -260 489 -326 58 -21\n144 -56 191 -78 108 -50 260 -99 342 -109 56 -7 64 -11 77 -37 13 -27 12 -31\n-9 -48 -12 -10 -37 -18 -54 -18 -17 0 -82 -9 -144 -21 -106 -19 -117 -19 -190\n-5 -88 18 -445 72 -572 87 -51 5 -104 19 -132 32 -45 22 -47 23 -62 5 -18 -20\n-57 -22 -126 -7 -25 5 -67 12 -94 14 -27 3 -51 7 -54 10 -4 3 -13 -9 -22 -27\n-30 -64 -187 -115 -469 -152 -105 -14 -116 -17 -164 -54 -67 -50 -110 -72\n-141 -72 -14 0 -60 -11 -102 -25 -42 -14 -81 -25 -86 -25 -6 0 -26 -14 -45\n-30 -28 -25 -43 -30 -83 -30 -58 0 -92 -12 -132 -45 -16 -14 -47 -28 -69 -31\n-27 -5 -46 -15 -57 -31 -64 -93 -90 -106 -227 -118 -57 -5 -90 -16 -180 -60\n-60 -29 -139 -63 -175 -74 -36 -12 -90 -39 -120 -61 -161 -118 -266 -176 -398\n-224 -41 -14 -103 -47 -139 -73 -36 -25 -108 -64 -161 -85 -53 -21 -113 -49\n-132 -62 -19 -13 -45 -26 -56 -30 -28 -9 -198 -177 -230 -227 l-24 -39 22 -30\nc12 -17 30 -30 41 -30 11 0 47 21 81 46 68 52 189 114 222 114 12 0 44 16 70\n35 135 98 190 119 296 118 75 -2 78 -1 84 24 10 39 78 81 188 114 326 101 352\n110 441 164 50 30 129 70 177 89 105 43 157 68 223 111 28 18 67 35 89 38 21\n3 57 16 80 28 22 12 66 30 96 40 30 10 80 27 110 38 30 10 123 26 206 35 91\n10 199 29 270 49 116 31 125 32 319 31 111 0 223 -6 252 -12 46 -10 57 -9 98\n9 41 18 59 20 135 14 82 -7 91 -5 164 24 96 38 152 40 221 6 58 -28 93 -30\n343 -15 92 5 255 14 362 20 107 6 238 17 290 25 52 8 185 21 295 29 111 9 223\n23 250 31 67 21 203 30 238 16 47 -18 30 -51 -28 -51 -43 0 -36 -18 10 -24 54\n-9 71 -24 86 -79 20 -76 -12 -136 -88 -162 -23 -8 -44 -24 -54 -42 -20 -36\n-134 -129 -175 -143 -17 -6 -46 -29 -64 -51 -38 -48 -164 -150 -206 -167 -16\n-7 -39 -28 -51 -46 -41 -63 -146 -135 -179 -122 -16 6 -28 -10 -14 -19 5 -3\n10 -14 10 -25 0 -18 -62 -50 -96 -50 -16 0 -15 -3 2 -46 7 -17 -36 -65 -73\n-80 -29 -12 -38 -12 -69 1 -20 8 -44 15 -53 14 -9 0 -2 -5 14 -11 57 -20 87\n-68 51 -81 -8 -3 -21 -27 -30 -54 -21 -64 -88 -164 -136 -206 -29 -24 -36 -37\n-30 -47 26 -41 4 -103 -54 -151 -25 -22 -28 -32 -30 -89 -2 -42 -11 -84 -26\n-119 -19 -42 -21 -57 -12 -70 7 -9 20 -31 29 -49 17 -32 17 -32 -15 -65 -29\n-30 -32 -37 -22 -61 15 -39 12 -134 -5 -193 -33 -112 -46 -423 -23 -573 6 -41\n12 -111 13 -155 0 -53 6 -90 17 -110 9 -17 32 -102 52 -190 44 -195 53 -230\n76 -276 25 -48 45 -63 75 -55 35 9 41 44 22 145 -25 137 -30 223 -17 284 11\n49 10 64 -9 134 -25 93 -27 160 -6 209 21 51 38 151 34 204 -2 25 -2 72 -1\n105 4 79 4 175 2 251 -3 75 14 132 47 160 21 18 23 25 14 42 -17 32 -13 78 8\n93 11 8 31 43 46 79 25 59 105 280 105 289 0 1 69 71 153 155 84 83 168 174\n186 201 19 28 60 82 91 120 31 39 75 97 98 131 59 88 186 219 251 259 123 76\n264 139 322 143 53 4 59 2 95 -31 22 -19 68 -49 104 -67 87 -44 166 -106 236\n-185 32 -37 70 -73 85 -80 33 -18 61 -85 58 -140 -2 -30 3 -49 18 -69 13 -16\n31 -67 43 -124 30 -133 47 -187 70 -207 11 -10 27 -42 35 -73 13 -43 28 -66\n71 -107 52 -51 54 -54 54 -106 0 -30 6 -63 13 -74 44 -74 55 -91 81 -123 38\n-50 83 -139 97 -196 6 -25 15 -46 20 -46 13 0 86 -115 100 -158 7 -20 22 -53\n35 -72 12 -19 30 -60 39 -90 30 -100 38 -114 95 -175 32 -33 68 -77 82 -97 24\n-36 61 -68 122 -105 88 -55 89 -56 129 -158 31 -78 50 -112 92 -157 34 -36 55\n-69 59 -91 7 -36 41 -86 100 -148 18 -19 48 -64 66 -100 18 -35 45 -82 60\n-104 25 -37 80 -130 122 -208 10 -18 30 -46 45 -64 15 -17 46 -55 68 -83 39\n-50 181 -180 197 -180 19 0 42 55 42 100 0 52 -10 68 -104 176 -26 30 -62 83\n-80 116 -17 34 -46 82 -64 107 -45 63 -206 332 -246 411 -18 36 -50 94 -70\n130 -21 36 -43 84 -49 107 -10 37 -84 151 -147 226 -13 16 -24 36 -24 45 0 10\n-19 49 -41 87 -58 97 -67 122 -90 238 -12 61 -34 131 -55 175 -22 46 -33 80\n-29 93 5 14 -6 33 -39 70 -30 33 -47 63 -51 87 -9 53 -25 82 -56 98 -30 15\n-79 104 -79 141 0 14 -18 43 -44 71 -24 26 -47 58 -51 72 -4 13 -16 36 -25 50\n-9 14 -32 51 -51 83 -19 32 -56 80 -82 105 -27 26 -55 62 -63 80 -8 17 -18 32\n-23 32 -18 0 -69 63 -91 113 -12 29 -26 59 -31 67 -26 42 -40 85 -35 106 7 28\n-10 113 -35 168 -10 23 -36 60 -59 83 -45 47 -51 77 -19 117 22 27 56 34 89\n16 15 -8 21 -6 30 11 7 11 28 28 48 36 50 20 127 80 143 110 19 35 92 83 127\n83 16 0 50 -12 76 -26 64 -36 178 -44 269 -19 45 12 70 14 82 8 13 -8 28 -4\n59 12 62 34 165 49 213 31 21 -8 53 -17 70 -20 33 -5 170 -59 250 -98 44 -21\n81 -66 108 -131 22 -52 68 -361 63 -422 -3 -30 -21 -85 -46 -141 -42 -91 -52\n-134 -31 -134 45 0 91 26 114 65 13 23 40 61 60 84 22 27 35 53 35 72 0 15 9\n50 19 77 26 65 52 272 40 315 -12 42 -12 129 1 161 8 21 16 26 44 26 25 0 38\n-6 46 -19 5 -11 31 -27 58 -35 63 -21 88 -39 118 -87 13 -21 30 -39 37 -39 18\n0 53 -39 66 -72 6 -15 38 -45 78 -72 37 -25 85 -58 105 -73 20 -16 64 -43 97\n-62 84 -48 201 -156 201 -187 0 -14 6 -24 14 -24 27 0 75 -50 140 -148 56 -84\n101 -137 170 -202 9 -8 51 -55 94 -104 158 -183 163 -188 222 -197 30 -5 66\n-17 80 -28 14 -11 48 -33 75 -49 59 -35 192 -171 201 -207 5 -19 13 -25 35\n-25 15 0 39 -10 53 -22 26 -24 102 -155 112 -193 3 -12 27 -45 55 -74 36 -38\n69 -93 125 -209 42 -86 85 -173 95 -192 10 -19 39 -76 63 -126 25 -51 63 -113\n85 -138 64 -74 100 -131 151 -240 26 -56 54 -107 63 -114 18 -15 80 -7 96 12\n10 12 16 61 13 111 -1 18 -18 52 -39 81 -41 54 -127 221 -139 268 -4 17 -24\n57 -44 90 -21 34 -54 92 -74 129 -21 37 -62 95 -92 129 -46 52 -74 105 -74\n144 0 6 -11 21 -25 34 -19 18 -24 31 -20 50 4 20 -2 33 -30 60 -35 33 -44 63\n-25 75 18 11 11 35 -11 35 -24 0 -120 88 -151 138 l-22 35 28 22 c33 26 26 33\n-41 41 -66 9 -87 24 -108 81 -9 26 -30 68 -45 93 -16 25 -33 62 -38 83 -6 21\n-24 51 -42 67 -27 26 -30 32 -24 70 6 38 4 43 -34 79 -22 21 -78 70 -124 108\n-45 39 -100 90 -121 114 -51 60 -48 57 -80 80 -22 17 -27 27 -23 45 7 25 8 24\n-84 45 -51 11 -63 20 -161 118 -58 58 -113 122 -122 142 -13 29 -24 37 -53 42\n-42 7 -71 28 -225 163 -132 117 -171 158 -199 214 -11 22 -34 47 -50 55 -17 9\n-30 19 -30 23 0 4 -14 16 -31 26 -39 23 -66 67 -79 133 -17 81 -1 124 60 163\n53 34 126 119 161 186 33 64 67 184 74 265 6 65 3 93 -25 205 -35 139 -68 214\n-111 244 -37 27 -199 80 -243 80 -77 0 -119 46 -99 106 7 20 29 38 89 69 134\n69 229 141 301 227 36 43 78 85 94 93 20 11 30 25 35 50 5 30 10 35 34 35 24\n0 27 3 23 25 -4 20 1 27 33 42 21 10 50 31 64 47 61 70 80 86 100 86 11 0 39\n10 62 21 33 17 53 20 94 16 39 -4 56 -2 65 9 6 8 17 14 23 14 6 0 31 16 55 35\n47 37 56 41 66 25 11 -17 22 -11 43 24 27 46 162 126 214 126 101 0 181 -38\n312 -149 104 -88 114 -122 71 -229 -28 -69 -32 -124 -10 -142 18 -15 90 23\n163 86 28 24 56 44 63 44 6 0 27 -15 45 -34 24 -25 48 -37 86 -45 77 -17 268\n-114 326 -166 28 -25 56 -45 63 -45 37 0 236 -142 259 -185 8 -15 31 -30 61\n-40 26 -9 72 -33 102 -54 30 -22 68 -45 83 -52 16 -8 45 -36 66 -64 22 -29 50\n-54 68 -60 17 -6 58 -33 91 -60 33 -28 89 -68 124 -90 173 -109 465 -359 465\n-399 0 -7 11 -23 25 -36 32 -30 59 -110 60 -180 0 -30 5 -62 10 -70 5 -8 15\n-83 21 -166 7 -83 17 -161 23 -172 14 -27 14 -77 -1 -118 -10 -27 -8 -41 10\n-89 l22 -57 -20 -46 c-24 -53 -44 -171 -37 -216 7 -44 -17 -175 -52 -281 -26\n-79 -28 -92 -15 -106 8 -8 14 -23 14 -31 0 -9 6 -21 14 -27 11 -9 23 -4 59 26\n25 21 57 46 71 56 18 12 26 27 26 48 0 16 7 46 16 67 9 20 17 60 19 87 1 28 9\n77 19 110 13 45 19 114 23 280 6 240 -4 347 -37 401 -30 47 -25 78 17 124 l36\n41 -25 27 c-34 36 -48 65 -48 97 0 38 30 97 52 103 18 4 18 6 -3 28 -28 30\n-74 145 -94 232 -8 37 -28 116 -43 176 -27 102 -31 111 -58 120 -16 5 -49 26\n-73 47 -24 21 -71 54 -105 73 -78 44 -156 112 -156 137 0 11 7 31 16 44 19 29\n19 29 -36 10 -78 -28 -169 -13 -218 35 -15 15 -43 36 -62 48 -20 12 -51 40\n-69 63 -22 27 -54 50 -90 66 -71 31 -214 126 -243 162 -13 15 -37 49 -55 74\n-28 41 -39 48 -102 67 -67 20 -74 25 -198 148 -71 71 -145 138 -164 149 -48\n31 -85 72 -104 117 l-17 40 41 80 c43 85 73 175 115 341 34 134 97 315 157\n450 27 60 49 124 49 141 0 64 -57 100 -246 154 -39 11 -79 29 -90 41 -25 28\n-171 100 -364 179 -113 47 -183 84 -260 136 -148 100 -235 149 -308 173 -81\n26 -252 115 -300 157 -34 28 -40 30 -57 18 -25 -18 -87 -18 -132 1 -46 19\n-126 19 -164 -1 -25 -12 -60 -15 -182 -12 l-152 3 -55 -35 c-30 -20 -64 -40\n-75 -46 -11 -6 -57 -80 -102 -165 -52 -97 -95 -165 -117 -184 -28 -25 -38 -45\n-56 -113 -21 -76 -26 -86 -60 -107 -34 -21 -40 -31 -50 -82 -18 -97 -39 -142\n-72 -159 -39 -20 -67 -15 -92 19 -18 25 -21 42 -21 140 1 137 7 162 45 182 37\n19 37 29 1 82 -25 37 -30 56 -36 144 l-7 101 -52 60 c-28 33 -61 75 -72 92\n-33 49 -98 87 -168 97 -64 9 -153 2 -162 -12 -3 -5 -20 -15 -38 -23 -27 -11\n-42 -31 -81 -107 -26 -52 -60 -112 -75 -134 -48 -71 -63 -108 -71 -182 -4 -39\n-15 -86 -24 -103 -24 -47 -35 -128 -23 -176 9 -39 8 -44 -25 -87 -21 -28 -38\n-63 -42 -89 -4 -24 -17 -101 -30 -173 -13 -71 -31 -218 -40 -325 -9 -107 -21\n-213 -26 -235 -13 -49 -53 -129 -86 -172 -22 -30 -29 -33 -77 -33 -67 0 -147\n24 -172 51 -12 14 -20 38 -21 68 0 25 -6 66 -12 91 -10 46 0 358 19 585 6 68\n6 133 0 170 -5 33 -14 112 -20 175 -15 157 -48 392 -66 463 -8 32 -30 194 -49\n360 -39 341 -62 517 -75 564 -4 18 -22 45 -39 59 -17 14 -43 50 -57 80 -31 65\n-162 208 -249 269 -80 57 -138 79 -278 104 -124 22 -222 54 -234 75 -5 8 -28\n24 -53 36 -25 12 -67 38 -94 58 -26 19 -78 46 -114 59 -37 14 -72 29 -78 34\n-7 6 -16 4 -25 -7z m176 -395 c77 -20 180 -62 213 -86 18 -14 47 -53 66 -92\n40 -79 45 -84 144 -136 108 -57 109 -59 121 -255 10 -161 46 -348 85 -442 23\n-58 54 -162 60 -206 4 -24 18 -71 31 -105 14 -34 31 -90 37 -124 10 -55 9 -66\n-4 -80 -15 -14 -20 -14 -60 10 -24 14 -77 56 -118 92 -217 191 -488 322 -858\n415 -85 21 -164 45 -177 54 -44 29 -41 98 9 209 14 32 26 62 26 68 0 13 51\n134 86 204 13 28 38 106 55 174 44 181 79 239 171 285 59 30 59 30 113 15z\nm3675 -1434 c26 -13 67 -27 89 -31 27 -4 56 -20 84 -44 59 -52 97 -69 176 -79\n38 -5 95 -20 127 -35 33 -14 99 -34 147 -46 115 -26 216 -67 308 -124 65 -41\n80 -46 131 -46 47 0 76 -8 166 -50 60 -27 115 -50 123 -50 8 0 30 -13 49 -28\n33 -28 33 -29 18 -58 -9 -16 -44 -117 -78 -224 -64 -199 -90 -325 -90 -438 0\n-67 -14 -107 -32 -95 -7 3 -39 14 -72 24 -85 24 -215 79 -316 133 -47 25 -134\n62 -195 82 -94 33 -122 38 -193 37 -70 -1 -87 -5 -106 -22 -17 -16 -35 -21\n-82 -21 -40 0 -78 -8 -119 -25 -76 -31 -111 -32 -126 -3 -11 21 -12 21 -23\n-12 -9 -29 -20 -38 -71 -58 -32 -13 -72 -35 -88 -48 -16 -13 -37 -24 -48 -24\n-10 0 -19 -4 -19 -9 0 -5 -10 -13 -22 -17 -12 -3 -41 -26 -65 -49 -60 -59 -91\n-66 -124 -26 -32 39 -42 40 -23 2 18 -36 9 -77 -20 -93 -11 -6 -43 -31 -69\n-54 -57 -51 -107 -68 -157 -54 -19 6 -36 10 -37 10 -1 0 1 -15 4 -34 7 -45\n-19 -122 -59 -171 -18 -21 -33 -45 -34 -53 -2 -8 -11 -23 -21 -33 -56 -58 -71\n-72 -103 -93 -70 -47 -120 -38 -120 21 0 36 79 168 112 187 19 12 32 33 45 74\n12 37 31 70 55 94 24 24 35 43 32 55 -3 10 2 32 10 48 9 17 16 42 16 56 0 15\n9 38 20 52 11 14 20 33 20 42 0 30 62 135 96 163 25 21 31 31 24 42 -18 28\n-11 69 13 81 29 16 38 30 31 52 -9 28 5 56 37 73 26 13 29 19 23 48 -10 54 55\n156 99 156 19 0 19 1 3 19 -17 19 -17 22 2 73 11 29 32 79 46 111 14 32 26 70\n26 84 0 15 11 38 24 52 13 15 45 64 71 111 25 47 56 93 68 102 16 12 21 25 19\n47 -3 25 6 40 49 86 60 63 77 67 149 30z m-1368 -252 c24 -28 28 -59 37 -363\n7 -208 14 -298 25 -335 20 -63 20 -99 1 -115 -8 -7 -14 -25 -12 -44 2 -28 -1\n-31 -30 -34 -35 -3 -43 -21 -18 -42 22 -18 19 -82 -5 -113 -24 -31 -25 -43 -4\n-93 12 -28 15 -55 11 -94 -9 -84 -25 -119 -55 -127 -15 -3 -43 -19 -62 -35\n-37 -30 -68 -35 -102 -17 -16 9 -28 7 -53 -7 -32 -17 -35 -17 -75 1 -49 22\n-65 46 -50 75 7 12 8 39 4 66 -5 39 -2 54 30 120 32 65 39 92 51 205 16 140\n27 172 75 213 30 25 30 26 15 55 -19 38 -19 69 1 117 9 22 21 73 26 114 5 41\n18 95 29 120 16 36 49 228 49 286 0 6 9 23 21 38 24 31 68 35 91 9z m756\n-2629 c82 -70 87 -114 31 -268 -31 -86 -65 -130 -107 -141 -15 -4 -44 -20 -66\n-36 -67 -49 -126 -35 -126 31 0 12 27 50 64 89 101 108 115 144 90 243 -16 62\n-16 68 0 92 24 38 63 34 114 -10z m-2998 -484 c25 -25 25 -35 -1 -71 -23 -33\n-44 -37 -71 -12 -38 34 -11 96 45 102 4 1 16 -8 27 -19z\"/>\n</g>\n</svg>\n\n);\n\n}\n\nexport default SpiderIcon;\n","import React,{useState} from 'react';\n\n\nconst PlusIcon = (props)=>{\n\n  const [width,setWidth] = useState('35');\n  const [height,setHeight] = useState('35');\n  const [color, setColor] = useState('white');\n\n  const getProps = ()=>{\n\n    if(props.width){\n      setWidth(props.width);\n    }\n    if(props.height){\n      setHeight(props.height);\n    }\n\n    if(props.color){\n      setColor(props.color);\n    }\n\n  }\n\n\nreturn(\n  <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n   width={width} height={height} viewBox=\"0 0 1280.000000 1280.000000\"\n   preserveAspectRatio=\"xMidYMid meet\">\n\n  <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\"\n  fill=\"#3f92a4\" stroke=\"none\">\n  <path d=\"M6055 11684 c-969 -75 -1819 -365 -2600 -889 -301 -201 -533 -393\n  -795 -655 -267 -267 -456 -498 -665 -810 -475 -712 -749 -1461 -857 -2342 -20\n  -162 -22 -229 -22 -588 0 -429 10 -570 65 -888 186 -1085 697 -2070 1479\n  -2852 267 -267 498 -456 810 -665 638 -425 1331 -698 2081 -819 328 -53 427\n  -60 849 -60 422 0 521 7 849 60 1997 322 3653 1780 4226 3720 89 302 145 576\n  187 916 20 162 22 229 22 588 0 429 -10 572 -65 888 -125 724 -395 1408 -795\n  2016 -811 1231 -2096 2071 -3543 2316 -292 49 -440 61 -816 64 -198 2 -382 2\n  -410 0z m795 -829 c931 -97 1798 -474 2490 -1082 832 -731 1354 -1705 1500\n  -2795 117 -881 -39 -1792 -444 -2593 -264 -520 -612 -968 -1056 -1358 -1345\n  -1181 -3290 -1440 -4896 -653 -889 435 -1606 1145 -2048 2027 -635 1265 -632\n  2750 8 4014 264 520 612 968 1056 1358 670 588 1501 959 2400 1072 293 37 694\n  41 990 10z\"/>\n  <path d=\"M5715 9361 c-48 -22 -79 -54 -100 -103 -13 -33 -15 -158 -15 -1048\n  l0 -1010 -1012 0 c-963 0 -1015 -1 -1053 -19 -48 -22 -79 -54 -100 -103 -13\n  -32 -15 -122 -15 -678 0 -556 2 -646 15 -678 21 -49 52 -81 100 -103 38 -18\n  90 -19 1053 -19 l1012 0 0 -1012 c0 -963 1 -1015 19 -1053 22 -48 54 -79 103\n  -100 32 -13 122 -15 680 -15 602 0 646 2 683 19 50 22 91 69 105 119 6 24 10\n  381 10 1040 l0 1002 1010 0 c890 0 1015 2 1048 15 49 21 81 52 103 100 17 38\n  19 79 19 685 0 604 -2 648 -19 685 -22 50 -69 91 -119 105 -24 6 -381 10\n  -1039 10 l-1003 0 0 1003 c0 658 -4 1015 -10 1039 -14 50 -55 97 -105 119 -37\n  17 -81 19 -685 19 -606 0 -647 -2 -685 -19z\"/>\n  </g>\n  </svg>\n);\n\n}\n\nexport default PlusIcon;\n","import React,{useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Badge from 'react-bootstrap/Badge';\nimport crossIcon from './CrossIcon.svg';\nimport crossIconHover from './CrossIconHover.svg';\n\n\nconst ElementBadge = (props)=>{\n\n  const [cross,setCross] = useState(crossIcon)\n\n  return(\n\n    <Badge pill\n     variant = 'light'\n     style = {{\n       margin : 5\n     }}\n\n     >\n\n        <span style = {{\n          marginRight : 5\n        }}>\n          {props.item}\n        </span>\n        <span\n        data-key = {props.index}\n        onClick = {(event)=>{props.rmElement(event.target.dataset.key)}}\n\n        >\n          <img\n            src = {cross}\n            data-key = {props.index}\n            style = {{fill : 'red'}}\n            onMouseEnter = {()=>{setCross(crossIconHover)}}\n            onMouseLeave = {()=>{setCross(crossIcon)}}\n            />\n        </span>\n    </Badge>\n\n\n  );\n\n}\n\nexport default ElementBadge;\n","import React,{useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Badge from 'react-bootstrap/Badge';\nimport ElementBadge from './ElementBadge';\n\n\nconst ElementsField = (props)=>{\n\n  const handleElements = (item,index)=>{\n    return <ElementBadge item = {item} index = {index} rmElement = {props.rmElement}/>\n  }\n\n  return(\n    <div\n    style = {{padding : 10,\n              background : ' background:#7f7f7f',\n              background: 'rgba(255,255,255,0.1)',\n              marginBottom : 20,\n              borderRadius :5\n            }}>\n\n\n      {props.elementArray.map(handleElements)}\n\n\n\n\n    </div>\n\n\n  );\n\n\n}\n\nexport default ElementsField ;\n","import React,{useState} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport SpiderIcon from './components/SpiderIcon';\nimport PlusIcon from './components/PlusIcon';\nimport ElementsField from './components/ElementsField';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nconst Form = ()=>{\n\n  //Values of input fields\n  const [xpath,setXpath] = useState(null);\n  const [cssSelector,setCssSelector] = useState(null);\n  const [fieldNames, setFieldNames] = useState(null);\n  const [startingUrl,setStartingUrl] = useState(null);\n  const [selectedFile,setSelectedFile] = useState(null);\n\n  //Arrays with the values inserted\n  const [xpathArray,setXpathArray] = useState([]);\n  const [cssArray,setCssArray] = useState([]);\n  const [fieldNamesArray,setFieldNamesArray] = useState([]);\n  const [urlArray,setUrlArray] = useState([]);\n\n\n\n  const handleXpathAdd = ()=>{\n    setXpathArray([...xpathArray,xpath]);\n    setXpath('')\n  }\n\n  const handleXpathRemove = (index)=>{\n    if(index > -1){\n        let array = Object.assign([],xpathArray);\n        array.splice(index,1);\n        setXpathArray(array);\n\n\n      }\n  }\n\n  const handleCssAdd = ()=>{\n    setCssArray([...cssArray,cssSelector]);\n    setCssSelector('')\n  }\n\n  const handleCssRemove = (index)=>{\n    if(index > -1){\n        let array = Object.assign([],cssArray);\n        array.splice(index,1);\n        setCssArray(array);\n\n\n      }\n  }\n\n  const handleFieldNamesAdd = ()=>{\n    setFieldNamesArray([...fieldNamesArray,fieldNames]);\n    setFieldNames('');\n  }\n\n  const handleFieldNamesRemove = (index)=>{\n    if(index > -1){\n        let array = Object.assign([],fieldNamesArray);\n        array.splice(index,1);\n        setFieldNamesArray(array);\n\n\n      }\n  }\n\n  const handleUrlRemove = (index)=>{\n    if(index > -1){\n        let array = Object.assign([],urlArray);\n        array.splice(index,1);\n        setUrlArray(array);\n\n\n      }\n  }\n\n\n  const handleUrlAdd = ()=>{\n    setUrlArray([...urlArray,startingUrl]);\n    setStartingUrl('');\n  }\n\n//////// Handle Value Insert ////////////////\n\n  const handleXpaths = (event)=>{\n    setXpath(event.target.value);\n  }\n\n  const handleCssSelect = (event)=>{\n    setCssSelector(event.target.value);\n  }\n\n  const handleFieldNames = (event)=>{\n    setFieldNames(event.target.value);\n  }\n\n  const handleStartingUrl = (event)=>{\n    setStartingUrl(event.target.value);\n  }\n\n  const handleFile = (event) =>{\n    setSelectedFile(event.target.files[0]);\n    console.log(event.target.files[0]);\n  }\n\n////////////Handle Enter Key Value Insert////////\n  const enterPressedXpath = (event)=>{\n    if(event.key == 'Enter'){\n      handleXpathAdd();\n    }\n  }\n\n\n  const enterPressedErrXpath = (event)=>{\n    if(event.key == 'Enter'){\n      handleCssAdd();\n    }\n  }\n\n  const enterPressedColumnNames = (event)=>{\n    if(event.key == 'Enter'){\n      handleFieldNamesAdd();\n    }\n  }\n\n  const enterPressedStartingUrl= (event)=>{\n    if(event.key == 'Enter'){\n      handleUrlAdd();\n    }\n  }\n\n  ///////////Handle API call/////////////////////\n\n  const handleSubmit = ()=>{\n    const file = new FormData();\n    file.append('xpath', xpath);\n    file.append('cssSelector',cssSelector);\n    file.append('avatar',selectedFile);\n\n    const body = {\n      'starting_url' : urlArray,\n      'xpaths' : xpathArray,\n      'column_names' : fieldNamesArray,\n      'error_xpaths' :cssArray,\n    }\n\n    const endPoint = 'http://localhost:8000/create';\n    fetch(endPoint,{\n      method: 'POST',\n      body : JSON.stringify(body),\n      mode : 'cors',\n  })\n      .then((response) => {\n\n        return response.json();\n\n      })\n\n      .catch((err)=>{\n        if(err){\n        console.log(err.message)}});\n\n    //  console.log(file);\n    //  console.log(selectedFile);\n  }\n\n\n  return(\n    <Container fluid\n      className = {'h-100'}\n      style = {{\n      background : 'rgb(28,28,28)',\n      background : 'linear-gradient(90deg, rgba(28,28,28,1) 8%, rgba(38,80,94,1) 65%, rgba(63,146,164,1) 91%)',\n      minHeight : 800\n      }}\n      >\n    <Navbar className = {'fixed-top'} style = {{opacity : 0.9}}>\n        <Navbar.Brand style = {{ color : 'white'}}>\n\n        <SpiderIcon />\n\n        Venom Crawler</Navbar.Brand>\n    </Navbar>\n      <Row className=\"justify-content-md-center h-100\">\n        <Col xs lg=\"8\">\n          <div style = {{padding : 50}}>\n\n\n          <InputGroup size=\"md\" className=\"mb-3\" onChange = {handleXpaths}>\n            <InputGroup.Prepend>\n              <InputGroup.Text  id=\"inputGroup-sizing-sm\" style = {{backgroundColor : 'black',color : '#dee4ed',}}>\n                XPATHs\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl onKeyPress = {enterPressedXpath} value = {xpath} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" style = {{backgroundColor : '#040404',opacity : 0.7,color : 'white'}} />\n            <InputGroup.Append>\n              <Button\n                onClick = {handleXpathAdd}\n                style = {{padding : 0,backgroundColor : '#040404', borderColor : '#ced4da', borderLeft : 'none',opacity : 0.7,}}><PlusIcon /></Button>\n            </InputGroup.Append>\n          </InputGroup>\n          { xpathArray.length > 0 ? <ElementsField elementArray = {xpathArray} rmElement = {handleXpathRemove}/> : null}\n\n\n\n          <InputGroup size=\"md\" className=\"mb-3\" onChange = {handleCssSelect}>\n            <InputGroup.Prepend>\n                            <InputGroup.Text  id=\"inputGroup-sizing-sm\" style = {{backgroundColor : 'black',color : '#dee4ed',}}>\n                Errors Xpath :\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n                <FormControl onKeyPress = {enterPressedErrXpath} value = {cssSelector} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" style = {{backgroundColor : '#040404',opacity : 0.7,color : 'white'}} />\n                <InputGroup.Append>\n                  <Button\n                   onClick = {handleCssAdd}\n                   style = {{padding : 0,backgroundColor : '#040404', borderColor : '#ced4da', borderLeft : 'none',opacity : 0.7,}}><PlusIcon /></Button>\n                </InputGroup.Append>\n          </InputGroup>\n\n        { cssArray.length > 0 ? <ElementsField elementArray = {cssArray} rmElement = {handleCssRemove}/> : null}\n\n\n          <InputGroup size=\"md\" className=\"mb-3\" onChange = {handleFieldNames}>\n            <InputGroup.Prepend>\n                <InputGroup.Text  id=\"inputGroup-sizing-sm\" style = {{backgroundColor : 'black',color : '#dee4ed',}}>\n                Column Names :\n                </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl onKeyPress = {enterPressedColumnNames} value = {fieldNames} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" style = {{backgroundColor : '#040404',opacity : 0.7,color : 'white'}} />\n            <InputGroup.Append>\n              <Button\n                onClick = {handleFieldNamesAdd}\n                style = {{padding : 0,backgroundColor : '#040404', borderColor : '#ced4da', borderLeft : 'none',opacity : 0.7,}}><PlusIcon /></Button>\n            </InputGroup.Append>\n          </InputGroup>\n\n          { fieldNamesArray.length > 0 ? <ElementsField elementArray = {fieldNamesArray} rmElement = {handleFieldNamesRemove}/> : null}\n\n\n          <InputGroup size=\"md\" className=\"mb-3\" onChange = {handleStartingUrl}>\n            <InputGroup.Prepend>\n               <InputGroup.Text  id=\"inputGroup-sizing-sm\" style = {{backgroundColor : 'black',color : '#dee4ed',}}>\n                Starting URL\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl onKeyPress = {enterPressedStartingUrl} value = {startingUrl} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" style = {{backgroundColor : '#040404',opacity : 0.7,color : 'white'}} />\n            <InputGroup.Append>\n              <Button\n                onClick = {handleUrlAdd}\n                style = {{padding : 0,backgroundColor : '#040404', borderColor : '#ced4da', borderLeft : 'none',opacity : 0.7,}}><PlusIcon /></Button>\n            </InputGroup.Append>\n          </InputGroup>\n          { urlArray.length > 0 ? <ElementsField elementArray = {urlArray} rmElement = {handleUrlRemove}/> : null}\n          <Row className = {\"d-flex mb-3\"}>\n          <div class=\"p-2 mr-auto\">\n              <input  type = {'file'} name = {'upload_file'} id= {'upload_file'} style = {{display : 'none'}} onChange = {handleFile}/>\n              <label for = {'upload_file'} className = {'btn btn-outline-light btn-md'}>\n                Upload CSV\n              </label>\n              {selectedFile ? <p style = {{color : '#dee4ed',\n                                          fontSize : 16,\n                                          fontWeight : 800,\n                                          letterSpacing : 5\n                                        }}>{selectedFile.name}</p> : null}\n          </div>\n\n          <div className={\"p-2\"}>\n              <Button as=\"input\" variant=\"outline-light\" type=\"button\" value=\"Submit\" size = 'md' onClick = {handleSubmit}/>\n          </div>\n\n\n          </Row>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n\n  );\n}\n\n\nexport default Form;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <Form />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}